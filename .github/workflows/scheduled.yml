name: Daily Run

on:
  push:
    branches:
      - master
  schedule:
    # triggers at 2:50 AM IST (which is 9:20 PM UTC)
    - cron: '20 21 * * *'

permissions:
  contents: write  # allows pushing changes to the repository
  pull-requests: write  # allows creating and merging prs

jobs:
  auto-update:
    runs-on: ubuntu-latest
    steps:
      # checkout the code
      - name: checkout code
        uses: actions/checkout@v2

      # set up git user
      - name: set git user
        run: |
          git config --global user.name "ankitpakhale"
          git config --global user.email "akp3067@gmail.com"

      # create a new branch for the changes
      - name: create and commit changes
        run: |
          # ensure we are on the master branch
          git checkout master  
          # pull the latest changes from master
          git pull origin master  

          # create a new branch from master
          git checkout -b update-branch

          # pull the latest changes from the remote update-branch (if it exists)
          git pull origin update-branch --rebase  # rebase onto remote update-branch
      
          # make changes to the file
          echo "" > update_log.md
          echo "# auto-updated at $(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S')" >> update_log.md

          # stage and commit the changes
          git add -A
          git commit -m "chore: update at $(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S')"

          # push the changes to the remote update-branch
          git push origin update-branch

      # create a pull request
      - name: create pull request
        uses: peter-evans/create-pull-request@v3
        id: create_pr
        with:
          title: "automated update: $(TZ='Asia/Kolkata' date +'%Y-%m-%d %H:%M:%S')"
          body: "this is an automated pr to update the repository with a timestamp."
          base: master  # use your default branch here (master/main)
          head: update-branch

      # auto-merge the pull request
      - name: auto-merge pull request
        run: |
          # capture the pr url directly from the output
          PR_URL="${{ steps.create_pr.outputs.pull_request_url }}"
          
          # check if the PR URL exists and is not empty
          if [[ -n "$PR_URL" ]]; then
            echo "PR URL: $PR_URL"
            
            # merge the PR using the GitHub API
            curl -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"merge_method": "merge"}' \
              "$PR_URL/merge"
          else
            echo "Failed to get PR URL. Exiting."
            exit 1
          fi